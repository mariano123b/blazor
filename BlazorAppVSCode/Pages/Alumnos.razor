@page "/alumnos"
@using BlazorAppVSCode.Services
@using BlazorAppVSCode.Shared
@inject IAlumnoServices AlumnoService
@using BlazorAppVSCode.Models


<PageTitle>alumnos</PageTitle>

<ComponenteTitulo Titulo="Alumnos"/>
<!--<h1>alumnos</h1>-->

<p>alumnos del sitio web.</p>

@if (students == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <NavLink class="nav-link" href="EditarAlumnos">
        Nueva alumno
    </NavLink>
    <table class="table">
        <thead>
            <tr>
                <th>Abellido y Nombre</th>
                <th>Telefono</th>
                <th>Direccion</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var students in students)
            {
                <tr>
                    <th>@students.apellidoNombre</th>
                    <th>@students.telefono</th>
                    <th>@students.direccion</th>
                    <th>@students.email</th>
                    <td>
                    <NavLink class="nav-link" href=@($"EditarAlumnos?idAlumno={students.Id}")>
                            Editar
                        </NavLink>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Alumno[]? students;

    protected override async Task OnInitializedAsync()
    {
        students = await obtenerAlumnos();
    }
    private async Task<List<Alumno>> obtenerAlumnos()
    {
        return await AlumnoService.Get();
    }

}
